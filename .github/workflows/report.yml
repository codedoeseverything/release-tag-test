################################################
#  GITHUB ACTION WORKFLOW NAME
################################################
name: Report environment


################################################
#  GITHUB ACTION EVENT TRIGGER
################################################
on:
  workflow_dispatch:
  push:
    # branches: [ 'trunk' ]
    branches: [ 'main' ]
    

################################################
#  GITHUB ACTION JOBS
################################################
jobs:
  report:
    name: report
    runs-on: ubuntu-latest


################################################
#  GITHUB ACTIONS GLOBAL ENV VARIABLES  
################################################
    env:
      REGION : ap-southeast-2
      ENV: sandbox
      AWS_Account: Beta
      Status: Deployed
      Timestamp: 12:30pm
      Endpoint: https://example.com
      

################################################
#  GITHUB REPO CHECKOUT 
################################################
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis


###########################==5.3.1#####################
#  AWS CLI CONFIGURATION
################################################ 
      - name: Configure AWS credentials from $STACK_NAME account in $REGION region
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVOPS_AWS_KEY }}
          aws-secret-access-key: ${{ secrets.DEVOPS_SECRET_KEY }}
          aws-region: ${{ env.REGION }}


################################################
#  REPORTING
################################################ 
      - name: Convert JSON format cloudformation tags for stack deployment
        run: |
          aws s3 cp s3://reporting123/report.csv report1.csv
          chmod +x report1.csv
          DATE=$(date +%D)
          TIME=$(date +%T)
          REPORT=${GITHUB_REPOSITORY##*/},${GITHUB_REF##*/},${GITHUB_SHA:0:6},$GITHUB_ACTOR,$GITHUB_EVENT_NAME,$ENV,$AWS_Account,$Status,$DATE,$TIME,$Endpoint
          FILENAME=${GITHUB_REPOSITORY##*/}
          cat report1.csv
          sed -i -e "2i$REPORT" report1.csv
          cat report1.csv
          mv report1.csv ${GITHUB_REPOSITORY##*/}.csv
          aws s3 cp ${GITHUB_REPOSITORY##*/}.csv s3://reporting123/${GITHUB_REPOSITORY##*/}.csv --acl public-read-write




          # python3 scripts/cfn-param-json-convert.py config/cfn.tags


       
##########################################################
#  SLACK NOTIFICATION
##########################################################  
      - name: Slack Notification
        if: always() # Pick up events even if the job fails or is canceled.
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
        with:
          status: ${{ job.status }}
          author_name: ${{ env.SUBDOMAIN }} deployed to ${{ env.ENV }} environemnt in ${{ env.STACK_NAME }} AWS account
          mention: 'here'
          if_mention: failure,cancelled
          job_name: report # Match the name above.
          fields: repo,commit,eventName,ref,workflow,message,author,job,took
          custom_payload: |
            {
            username: 'GitHub Action CI WorkFlow',
            icon_emoji: ':github:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : ${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text:
             `${process.env.AS_REPO}\n
              ${process.env.AS_COMMIT}\n
              ${process.env.AS_EVENT_NAME}\n
              @${process.env.AS_REF}\n
              @${process.env.AS_WORKFLOW}\n
              ${process.env.AS_MESSAGE}\n
              ${process.env.AS_AUTHOR}\n
              ${process.env.AS_JOB}\n
              ${process.env.AS_TOOK}`,
            }]
            }